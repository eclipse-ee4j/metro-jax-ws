<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 1997, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Distribution License v. 1.0, which is available at
    http://www.eclipse.org/org/documents/edl-v10.php.

    SPDX-License-Identifier: BSD-3-Clause

-->

<descriptor since="2.1.3" uses="ri">
    <description>Schema Validaiton fromwsdl tests</description>
    <service basedir="./server">
        <wsdl href="hello_literal.wsdl"/>
    </service>

    <client name="fromwsdl.schema_validation.basic.doclit0">
        <description>
            Test hello().
        </description>
        req = new Hello_Type();
        req.setArgument("foo");
        // Don't set extra and this should throw exception
        try {
             response = helloPort.hello(req);
             fail("Expecting a schema validation exception. But didn't get one.");
        } catch(SOAPFaultException se) {
             // got expected exception.
        }
    </client>

    <client name="fromwsdl.schema_validation.basic.doclit1">
        <description>
            Test hello().
        </description>
        arg = "foo";
        extra = "bar";
        req = new Hello_Type();
        req.setArgument(arg);
        req.setExtra(extra);
        response = helloPort.hello(req);
        assertEquals(arg, response.getArgument());
        assertEquals(extra, response.getExtra());
    </client>

    <client name="fromwsdl.schema_validation.basic.doclit2">
        <description>
            Test Keywords.
        </description>
        String resp = helloPort.testKeyword("Hello");
        assertEquals(resp, "Hello World!");
    </client>

    <client name="fromwsdl.schema_validation.basic.doclit3">
        <description>
            Test method with void.
        </description>
        req = new VoidType();
        response = helloPort.voidTest(req);
        assertNotNull(response);
    </client>

    <client name="fromwsdl.schema_validation.basic.doclit4">
        <description>
            Test echoArray()
        </description>
        in = new String[]{"JAXRPC 1.0", "JAXRPC 1.1", "JAXRPC 1.1.2", "JAXRPC 2.0"};

        nt = new NameType();
        nt.getName().add(in[0]);
        nt.getName().add(in[1]);
        nt.getName().add(in[2]);
        nt.getName().add(in[3]);
        req = new jakarta.xml.ws.Holder(nt);
        helloPort.echoArray(req);
        assertNull(req.value);
    </client>

    <client name="fromwsdl.schema_validation.basic.doclit5">
        <description>
            Test echoArray1()
        </description>
        in = new String[]{"JAXRPC 1.0", "JAXRPC 1.1", "JAXRPC 1.1.2", "JAXRPC 2.0", "EA"};

        nt = new NameType();
        nt.getName().add(in[0]);
        nt.getName().add(in[1]);
        nt.getName().add(in[2]);
        nt.getName().add(in[3]);
        req = new jakarta.xml.ws.Holder(nt);
        helloPort.echoArray1(req);
        assertTrue(Arrays.equals(in, req.value.getName().toArray()));
    </client>

    <client name="fromwsdl.doclit6">
        <description>
            Test echoArray2().
        </description>
        req = new jakarta.xml.ws.Holder();
        helloPort.echoArray2(req);
        assertNull(req.value);
    </client>

    <client name="fromwsdl.schema_validation.basic.doclit7">
        <description>
            Test echoArray3()
        </description>
        in = new ArrayList();
        in.add("JAXRPC 1.0");
        in.add("JAXRPC 1.1");
        in.add("JAXRPC 1.1.2");
        in.add("JAXRPC 2.0");
        req = new jakarta.xml.ws.Holder(in);
        helloPort.echoArray3(req);
        assertEquals(in, req.value);
    </client>

    <client name="fromwsdl.schema_validation.basic.doclit8">
        <description>
            Test echoArray4().
        </description>
        resp = helloPort.echoArray4(new NameType1());
        assertEquals(resp.getName().get(0).getArgument(), "arg1");
        assertEquals(resp.getName().get(0).getExtra(), "extra1");
        assertEquals(resp.getName().get(1).getArgument(), "arg2");
        assertEquals(resp.getName().get(1).getExtra(), "extra2");
    </client>

</descriptor>
