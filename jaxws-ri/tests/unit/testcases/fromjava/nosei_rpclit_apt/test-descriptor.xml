<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 1997, 2019 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Distribution License v. 1.0, which is available at
    http://www.eclipse.org/org/documents/edl-v10.php.

    SPDX-License-Identifier: BSD-3-Clause

-->

<descriptor since="2.1">
  <description>
    Test multibyte service names
  </description>
  <service />
  <client name="fromjava.nosei_rpclit_apt1"><![CDATA[
    //this test no more applies as rpclit body parts cant take null parameter
    // since there are other tests that test this nullability, this test is commentedout
    //assertTrue(echoPort.echoBook(null) == null);
    assertEquals(echoPort.echoBook(Book.JWSDP),Book.JWSDP);
    assertEquals(echoPort.echoStatus(Status.YELLOW),Status.YELLOW);
  ]]></client>
  <client name="fromjava.nosei_rpclit_apt2"><![CDATA[
    GenericValue var = new GenericValue();
    var.setValue("fred");
    assertEquals(echoPort.echoGenericString(var).getValue(),"fred&john");
    var.setValue(null);
    assertNull(echoPort.echoGenericString(var).getValue());

    var.setValue(33);
    assertEquals(echoPort.echoGenericInteger(var).getValue(),33);

    assertEquals(echoPort.echoGenericObject(66),66);
    assertEquals(echoPort.echoGenericObject("bill"),"bill");
  ]]></client>
  <client name="fromjava.nosei_rpclit_apt3"><![CDATA[
        Bar bar = new Bar();
        bar.setAge(33);

        assertEquals(echoPort.echoString("foo"),"foo");
        assertEquals(echoPort.echoString("test"),"test");
        assertEquals(echoPort.echoString("Mary & Paul"),"Mary & Paul");

        assertEquals(echoPort.echoInt(33),33);

        //System.out.println("echoPort.echoBar(): "+echoPort.echoBar(null));
//        assertTrue(echoPort.echoBar(null) == null);
        assertEquals(echoPort.echoBar(bar).getAge(),bar.getAge());

        InnerBar innerBar = new InnerBar();
        innerBar.setName("doug");
        assertEquals(echoPort.echoInnerBar(innerBar).getName(),"dougdoug");
  ]]></client>
  <client name="fromjava.nosei_rpclit_apt4"><![CDATA[
    try {
        echoPort.echoString("Exception1");
        fail();
    } catch (Exception1_Exception e){
        Exception1 ex = e.getFaultInfo();
        assertEquals(ex.getFaultString(),"my exception1");
        assertTrue(ex.isValid());
    }
  ]]></client>
  <client name="fromjava.nosei_rpclit_apt5"><![CDATA[
    try {
      echoPort.echoString("Fault1");
      fail();
    } catch (Fault1 e){
        FooException ex = e.getFaultInfo();
        assertEquals(e.getMessage(),"fault1");
        assertEquals(ex.getVarFloat(),44F);
        assertEquals(ex.getVarInt(),33);
        assertEquals(ex.getVarString(),"foo");
    }
  ]]></client>
  <client name="fromjava.nosei_rpclit_apt6"><![CDATA[
    try {
      echoPort.echoString("WSDLBarException");
      fail();
    } catch (WSDLBarException e){
      Bar ex = e.getFaultInfo();
      assertEquals(e.getMessage(),"my barException");
      assertEquals(ex.getAge(),33);
   }
  ]]></client>
  <client name="fromjava.nosei_rpclit_apt7"><![CDATA[
    try {
      echoPort.echoString("Fault2");
      fail();
    } catch (Fault2_Exception e){
      assertEquals(e.getMessage(),"my fault2");
      Fault2 fault2 = e.getFaultInfo();
      assertEquals(fault2.getAge(),33);
    }
  ]]></client>
  <client name="fromjava.nosei_rpclit_apt8"><![CDATA[
    Holder strHolder = new Holder("fred");

    assertEquals(echoPort.outString("tmp", strHolder, 44),"tmp");
    assertEquals(strHolder.value,"tmp44");
    strHolder.value = "fred";

    assertEquals(echoPort.inOutString("tmp", strHolder, 44),"tmp");
    assertEquals(strHolder.value,"fredfred");

    Holder longHolder = new Holder();
    assertEquals(echoPort.outLong(33, longHolder, "tmp"),33);

    assertEquals(longHolder.value,345L);
    assertEquals(echoPort.inOutLong(44, longHolder, "tmp"),44);
    assertEquals(longHolder.value,690L);
  ]]></client>
  <client name="fromjava.nosei_rpclit_apt9"><![CDATA[
        assertTrue(echoPort.echoInHeader(33, 34L, "fred") == 34L);

        Holder longHolder = new Holder(new Long(44));
        assertEquals(echoPort.echoInOutHeader(33, longHolder, "fred"),"fred88");
        assertEquals(longHolder.value,88L);


        longHolder = new Holder();
        assertTrue(echoPort.echoOutHeader(33, longHolder, "fred").equals("fred33"));
        assertTrue(((long)longHolder.value) == 33L);
  ]]></client>
  <client name="fromjava.nosei_rpclit_apt10"><![CDATA[
        StringArray strArray = new StringArray();
//        List<String> list = strArray.getItem();
        strArray.getItem().add("Mary");
        strArray.getItem().add("Paul");
//        String[] strArray = new String[] { "Mary", "Paul" };

        StringArray returnArray = echoPort.echoStringArray(strArray);
        assertTrue(((List) returnArray.getItem()).size() == ((List) strArray.getItem()).size());
        assertTrue(((List) returnArray.getItem()).get(0).equals(((List) strArray.getItem()).get(0)));
        assertTrue(((List) returnArray.getItem()).get(1).equals(((List) strArray.getItem()).get(1)));
//        assertTrue(returnArray[1].equals(strArray[1]));
  ]]></client>
  <client name="fromjava.nosei_rpclit_apt11"><![CDATA[
        Bar bar = new Bar();
        bar.setAge(33);
        Bar bar2 = new Bar();
        bar2.setAge(44);
      BarArray array = new BarArray();
      ((List) array.getItem()).add(bar);
      ((List) array.getItem()).add(bar2);

        BarArray barArray = echoPort.echoBarArray(array);
        assertTrue(((List) barArray.getItem()).size() == 2);
        assertTrue(((Bar) ((List) barArray.getItem()).get(0)).getAge() == bar.getAge());
        assertTrue(((Bar) ((List) barArray.getItem()).get(1)).getAge() == bar2.getAge());
  ]]></client>
  <client name="fromjava.nosei_rpclit_apt12"><![CDATA[
        Bar bar = new Bar();
        bar.setAge(33);
        Bar bar2 = new Bar();
        bar2.setAge(44);
//    BarArray array = new BarArray();
//    array.getItem().add(bar);
//    array.getItem().add(bar2);

        BarArray barArray = echoPort.echoBarAndBar(bar, bar2);
        assertTrue(((List) barArray.getItem()).size() == 2);
        assertTrue(((Bar) ((List) barArray.getItem()).get(0)).getAge() == bar.getAge());
        assertTrue(((Bar) ((List) barArray.getItem()).get(1)).getAge() == bar2.getAge());
//        assertTrue(barArray[0].getAge() == bar.getAge());
//        assertTrue(barArray[1].getAge() == bar2.getAge());
  ]]></client>
  <client name="fromjava.nosei_rpclit_apt13"><![CDATA[
        echoPort.oneway();
        Thread.sleep(1000);
        assertTrue(echoPort.verifyOneway());
  ]]></client>
  <client name="fromjava.nosei_rpclit_apt14"><![CDATA[
        assertTrue(echoPort.helloWorld().equals("hello world"));
        echoPort.oneWayOperation();
        assertTrue(echoPort.overloadedOperation("fred").equals("fred"));
        assertTrue(echoPort.overloadedOperation2("ernie", " and bert").equals("ernie and bert"));
        StringArray strArray = echoPort.arrayOperation();
        assertTrue(((List) strArray.getItem()).get(0).equals("one"));
        assertTrue(((List) strArray.getItem()).get(1).equals("two"));
        assertTrue(((List) strArray.getItem()).get(2).equals("three"));
        assertTrue(echoPort.arrayOperationFromClient(strArray).equals("success"));
        Holder h1 = new Holder("Hello1");
        Holder h2 = new Holder("Hello2");
        echoPort.holderOperation(h1, h2);
        assertTrue(h1.value.equals("Hello11"));
        assertTrue(h2.value.equals("Hello22"));
  ]]></client>
  <client name="fromjava.nosei_rpclit_apt15"><![CDATA[
        assertTrue(echoPort.echoIntHeaderResult(33) == 66);
  ]]></client>
</descriptor>
