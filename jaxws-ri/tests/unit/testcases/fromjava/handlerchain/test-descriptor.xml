<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 1997, 2019 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Distribution License v. 1.0, which is available at
    http://www.eclipse.org/org/documents/edl-v10.php.

    SPDX-License-Identifier: BSD-3-Clause

-->

<descriptor since="2.1.3">
    <description>
        Tests using Handlers from Java.
        Uses @HandlerChain to configure handlers on server-side.
        Uses JAX-WS Customization and Programmatic configuration to configure handlers on client-side.
    </description>
    <client name="fromjava.handlerchain1">
        <description>
            Checks if the handlers get invoked on Client and Service.
        </description>
     <![CDATA[
     /*
     * Each handler adds one to the int during request and response,
     * so we should receive the original number plus 4 if the
     * handlers are working.
     */
        int x = 1;
        int diff = 4; // 2 per handler invoked
        int y = helloPort.hello(x);
        //System.out.println("sent: " + x + ", expect " + (x+diff) + " back. received: " + y);
        assertTrue(y == x+diff); // x+4 with all handlers
        ]]>
    </client>
    
    <client name="fromjava.handlerchain2">
        <description>
            Test configures handlers programmatically after
            clearing handlers out of registry in the service.
        </description>

        <![CDATA[
        HandlerResolver hr = new HandlerResolver() {
            public List getHandlerChain(PortInfo info) {
                return new ArrayList();
            }
        };
        helloService.setHandlerResolver(hr);
        HelloPortType stub = helloService.getHelloPort();
        int x = 1;
        int diff = 2; // 2 per handler invoked
        int y = stub.hello(x);
        System.out.println("sent: " + x + ", expect " + (x+diff) +
            " back. received: " + y);
        assertTrue(y == x+diff);


        hr = new HandlerResolver() {
            public List getHandlerChain(PortInfo info) {
                List handlers = new ArrayList();
                handlers.add(new TestHandler());
                return handlers;
            }
        };

        // now add client handler
        helloService.setHandlerResolver(hr);
        stub = helloService.getHelloPort();
        // test again
        diff = 4;
        y = stub.hello(x);
        System.out.println("sent: " + x + ", expect " + (x+diff) +
            " back. received: " + y);
        assertTrue(y == x+diff);
     ]]>   
    </client>

    <service basedir="./server"/>
</descriptor>
