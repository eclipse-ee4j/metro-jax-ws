<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 1997, 2019 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Distribution License v. 1.0, which is available at
    http://www.eclipse.org/org/documents/edl-v10.php.

    SPDX-License-Identifier: BSD-3-Clause

-->

<descriptor since="2.1.3" uses="ri">
  <description>schema_validation_basic</description>

  <client name="schema_validation_basic_testGenerics" sideEffectFree="true">
  <description>testGenerics</description>
  <![CDATA[
        holder = new Holder();
        echoPort.echoGenericString(holder);
        assertEquals("null&john", holder.value);
        holder.value = "fred";        
        echoPort.echoGenericString(holder);
        assertEquals("fred&john", holder.value);
        holder.value = null;
        echoPort.echoGenericInteger(holder);
        holder.value = null;
        echoPort.echoGenericInteger(holder);
        holder.value = new Integer(33);
        assertEquals(33, holder.value);

        assertEquals(66, echoPort.echoGenericObject(new Integer(66)));
        assertEquals("bill", echoPort.echoGenericObject("bill"));
  ]]></client>
    
    
  <client name="schema_validation_basic_testResultHeaders" sideEffectFree="true">
  <description>testResultHeaders</description>
  <![CDATA[
        assertEquals(66, echoPort.echoIntHeaderResult(33));
  ]]></client>

  <client name="schema_validation_basic_testSimpleValidation" sideEffectFree="true">
  <description>testSimple</description>
  <![CDATA[
        feature = new com.sun.xml.ws.developer.SchemaValidationFeature();
        echoPort1 = echoService.getEchoPort(new WebServiceFeature[] {feature});
        assertEquals("test", echoPort1.echoString("test"));
  ]]></client>

  <client name="schema_validation_basic_testSimple" sideEffectFree="true">
  <description>testSimple</description>
  <![CDATA[
        Bar bar = new Bar();
        bar.setAge(33);
        
        assertEquals("test", echoPort.echoString("test"));
        assertEquals("Mary & Paul", echoPort.echoString("Mary & Paul"));
        
        assertEquals(null, echoPort.echoBar(null));
        assertEquals(bar.getAge(), echoPort.echoBar(bar).getAge());
        assertEquals(bar.getAge(), echoPort.echoBar2(bar).getAge());
        
        assertEquals(null, echoPort.echoFoo(null));
        assertEquals("foo", echoPort.echoFoo("foo"));
        
        assertEquals(33L, echoPort.echoLong(33L));
  ]]></client>


  <client name="schema_validation_basic_testExceptions" sideEffectFree="true">
  <description>testExceptions</description>
  <![CDATA[
        try {
            echoPort.echoString("Exception1");
            fail();
        } catch (Exception1_Exception e){
            Exception1 ex = e.getFaultInfo();
            assertEquals("my exception1", ex.getFaultString());
            assertTrue(ex.isValid());
        }
        try {
            echoPort.echoString("Fault1");
            fail();
        } catch (Fault1 e){
            FooException ex = e.getFaultInfo();
            assertEquals("fault1", e.getMessage());
            assertEquals(44F, ex.getVarFloat());
            assertEquals(33, ex.getVarInt());
            assertEquals("foo", ex.getVarString());
        }
        try {
            echoPort.echoString("WSDLBarException");
            fail();
        } catch (WSDLBarException e){
            Bar ex = e.getFaultInfo();
            assertEquals("my barException", e.getMessage());
            assertEquals(33, ex.getAge());
        }
        try {
            echoPort.echoString("Fault2");
            fail();
        } catch (Fault2_Exception e){
            assertEquals("my fault2", e.getMessage());
            Fault2 fault2 = e.getFaultInfo();
            assertEquals(33, fault2.getAge());
        }
  ]]></client>


  <client name="schema_validation_basic_testHolders" sideEffectFree="true">
  <description>testHolders</description>
  <![CDATA[
        strHolder = new Holder();
        strHolder.value = "fred";

        echoPort.inOutString(strHolder);
        assertEquals("fredfred", strHolder.value);
        
        strHolder.value="Doug";
        echoPort.echoHolderString(strHolder);
        assertEquals("Hello Doug", strHolder.value);
        
        strHolder.value = null;
        echoPort.inOutString(strHolder);
        assertTrue(strHolder.value == null || strHolder.value.length() == 0);
        
        longHolder = new Holder();
        longHolder.value = 0L;
        longHolder.value = 345L;
        echoPort.inOutLong(longHolder);
        assertEquals(690L, longHolder.value);
  ]]></client>


  <client name="schema_validation_basic_testHeaders" sideEffectFree="true">
  <description>testHeaders</description>
  <![CDATA[
        assertEquals(77L, echoPort.echoInHeader(33, 44L));
        assertEquals(77L, echoPort.echoIn2Header(33, 44L, "dirk"));

        longHolder = new Holder(new Long(44));
        assertEquals(121L, echoPort.echoInOutHeader(33, longHolder));
        assertEquals(88L, longHolder.value);

        longHolder = new Holder();
        Long result = echoPort.echoOutHeader(33, longHolder);
        assertEquals(66L, result);
        assertEquals(33L, longHolder.value);

        longHolder = new Holder();
        stringHolder = new Holder();
        result = echoPort.echoOut2Header(33, longHolder, stringHolder);
        assertEquals(66L, result);
        assertEquals("Fred", stringHolder.value);
        assertEquals(33L, longHolder.value);
  ]]></client>

  <client name="schema_validation_basic_testArray1" sideEffectFree="true">
  <description>testArray1</description>
  <![CDATA[
        strArray = new StringArray();
        list = strArray.getItem();
        list.add("Mary");
        list.add("Paul");

        returnArray = echoPort.echoStringArray(strArray);
        assertEquals(strArray.getItem().size(), returnArray.getItem().size());
        assertEquals(strArray.getItem().get(0), returnArray.getItem().get(0));
        assertEquals(strArray.getItem().get(1), returnArray.getItem().get(1));
  ]]></client>

  <client name="schema_validation_basic_testArray2" sideEffectFree="true">
  <description>testArray2</description>
  <![CDATA[
        Bar bar = new Bar();
        bar.setAge(33);
        Bar bar2 = new Bar();
        bar2.setAge(44);
        BarArray array = new BarArray();
        array.getItem().add(bar);
        array.getItem().add(bar2);

        BarArray barArray = echoPort.echoBarArray(array);
        assertEquals(2, barArray.getItem().size());
        assertEquals(bar.getAge(), barArray.getItem().get(0).getAge());
        assertEquals(bar2.getAge(), barArray.getItem().get(1).getAge());
  ]]></client>


  <client name="schema_validation_basic_testOneway" >
  <description>testOneway</description>
  <![CDATA[
        echoPort.oneway("bogus");
        Thread.sleep(1000);    // hoping verifyOneway() is invoked after oneway()
        assertTrue(echoPort.verifyOneway(3));
  ]]></client>

  <service basedir="./server">
  </service>

</descriptor>
