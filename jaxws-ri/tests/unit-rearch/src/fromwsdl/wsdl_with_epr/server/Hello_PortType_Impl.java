/*
 * Copyright (c) 2004, 2018 Oracle and/or its affiliates. All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Distribution License v. 1.0, which is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

package fromwsdl.wsdl_with_epr.server;

import org.w3c.dom.Element;

import jakarta.xml.ws.WebServiceContext;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.handler.MessageContext;
import jakarta.annotation.Resource;
import java.rmi.Remote;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.List;


/**
 * Impl class for interface generated by wscompile -import.
 * This class will overwrite the impl class generated by wscompile.
 */

@jakarta.jws.WebService(endpointInterface="fromwsdl.wsdl_with_epr.server.Hello")

public class Hello_PortType_Impl implements Hello {
    @Resource
    WebServiceContext wsc;
    public HelloResponse hello(Hello_Type req)  {

        System.out.println("Hello_PortType_Impl received: " + req.getArgument() +
            ", " + req.getExtra());
        List<Element> refParams = getReferenceParameters();
        if(refParams.size() != 2) {
            throw new WebServiceException("Expected ReferenceParameters not received");
        }
        HelloResponse resp = new HelloResponse();
        resp.setName("vivek");
        resp.setArgument(req.getArgument());
        resp.setExtra(req.getExtra());
        return resp;
    }
    //Dummy methos, not a webmethod
    public void voidTest(int req)  {

    }
    
    public void echoArray(jakarta.xml.ws.Holder<NameType> name) {
        List<Element> refParams = getReferenceParameters();
        if(refParams.size() != 1) {
            throw new WebServiceException("Expected ReferenceParameters not received");
        }
    }

    private List<Element> getReferenceParameters() {
        return (List<Element>) wsc.getMessageContext().get(MessageContext.REFERENCE_PARAMETERS);
    }
}
