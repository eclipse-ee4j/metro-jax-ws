<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2012, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Distribution License v. 1.0, which is available at
    http://www.eclipse.org/org/documents/edl-v10.php.

    SPDX-License-Identifier: BSD-3-Clause

-->

<!DOCTYPE book [
<!ENTITY % ents SYSTEM "docbook.ent">
%ents;
]>
<section version="5.0" xml:id="tools-annotation-processing-ant-task" xml:lang="en"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:ns5="http://www.w3.org/2000/svg"
         xmlns:ns3="http://www.w3.org/1999/xhtml"
         xmlns:ns="http://docbook.org/ns/docbook"
         xmlns:m="http://www.w3.org/1998/Math/MathML">
    <title><command>annotationProcessing</command> Ant Task</title>

    <section>
        <title><command>annotationProcessing</command> Task Overview</title>

        <para>An Ant task for the <command>annotationProcessing</command> is provided with
        &ws.impl.name.full;.</para>
    </section>

    <section>
        <title><command>annotationProcessing</command> Task Attributes</title>

        <para>The attributes and elements supported by the Ant task almost the same as for the javac ant task.
            With only one restriction: by default jax-ws annotation processor will be used. There several additional
            attributes for usability improvement:</para>

        <informaltable frame="all">
            <tgroup cols="3" colsep="1" rowsep="1">
                <thead>
                    <row>
                        <entry>Attribute</entry>

                        <entry>Description</entry>

                        <entry>Required</entry>
                    </row>
                </thead>

                <tbody>
                    <row>
                        <entry><literal>procOnly</literal></entry>

                        <entry>Control whether annotation processing and compilation is done.
                            Can be <literal>true</literal> or <literal>false</literal>. Default is <literal>false</literal>.</entry>

                        <entry><literal>false</literal></entry>
                    </row>

                    <row>
                        <entry><literal>sourcedestdir</literal></entry>

                        <entry>Specify where to place processor generated
                        source files. <literal>-s &lt;path&gt;</literal></entry>

                        <entry><literal>true</literal></entry>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>

        <para>The list of source files to be processed are specified via a
        nested <literal>&lt;srcdir&gt;</literal> element. That is, a <link
        xlink:href="http://ant.apache.org/manual/using.html#path">path-like
        structure</link>. The classpath attribute is a <link
        xlink:href="http://ant.apache.org/manual/using.html#path">path-like
        structure</link> and can also be set via nested
        <literal>&lt;classpath&gt;</literal> elements. Before this task can be
        used, a <literal>&lt;taskdef&gt;</literal> element needs to be added
        to the project as given below:</para>

        <informalexample>
            <programlisting language="xml"><![CDATA[<taskdef name="annotationProcessing"
        classname="com.sun.tools.ws.ant.AnnotationProcessingTask">
    <classpath refid="jaxws.classpath"/>
</taskdef>]]></programlisting>
        </informalexample>

        <para>where <literal>jaxws.classpath</literal> is a reference to a
        <link
        xlink:href="http://ant.apache.org/manual/using.html#path">path-like
        structure</link>, defined elsewhere in the build environment, and
        contains the list of classes required by the &ws.spec.name; tools.</para>
    </section>

    <section xml:id="section-26459256796099617">
        <title><command>annotationProcessing</command> Task Examples</title>

        <informalexample>
            <programlisting language="xml"><![CDATA[<annotationProcessing
        destdir="${build.classes.home}"
        sourceDestDir="${build.classes.home}"
        srcdir="${basedir}/src"
        includes="*.java"
        sourcepath="${basedir}/src">
    <classpath refid="jaxws.classpath"/>
</annotationProcessing>]]></programlisting>
        </informalexample>

        <para>The above example processes the Java source files in the
        <literal>${basedir}/src</literal> directory and generates the source
        and class files in <literal>${build.classes.home}</literal>.
        <literal>${basedir}/src</literal> is directory used to search for
        source files for multiple <command>annotationProcessing</command> rounds. The classpath
        is a reference to a <link
        xlink:href="http://ant.apache.org/manual/using.html#path">path-like
        structure</link> <literal>jaxws.classpath</literal>, defined elsewhere
        in the build environment.</para>

        <informalexample>
            <programlisting language="xml"><![CDATA[<annotationProcessing
        debug="true"
        verbose="true"
        destdir="${build.classes.home}"
        srcdir="${basedir}/src""
        includes="**/server/*.java"
        sourceDestDir="${build.classes.home}"
        sourcepath="${basedir}/src">
    <classpath refid="jaxws.classpath"/>
</annotationProcessing>]]></programlisting>
        </informalexample>

        <para>The above example processes the Java source files in
        <literal>${basedir}/src/**/server</literal>, generates the source and
        class files in <literal>${build.classes.home}</literal>, compiles with
        debug information on, prints a message about what the compiler is
        doing. <literal>${basedir}/src</literal> is the
        directory used to search for source files for multiple
        <command>annotationProcessing</command> rounds. The classpath is a reference to a <link
        xlink:href="http://ant.apache.org/manual/using.html#path">path-like
        structure</link> <literal>jaxws.classpath</literal>, defined elsewhere
        in the build environment. This will also fork off the
        <command>annotationProcessing</command> process using the default
        <literal>java</literal> executable.</para>
    </section>
    <section xml:id="deprecated-apt">
        <title><command>Apt</command> Ant task</title>
        <para>
            For backwards compatibility <command>Apt</command> Ant task still exists, but is marked as deprecated,
            and can be used with certain restrictions.
        </para>
    </section>
</section>
