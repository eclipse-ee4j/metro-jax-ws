<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2012, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Distribution License v. 1.0, which is available at
    http://www.eclipse.org/org/documents/edl-v10.php.

    SPDX-License-Identifier: BSD-3-Clause

-->

<!DOCTYPE book [
<!ENTITY % ents SYSTEM "docbook.ent">
%ents;
]>
<chapter version="5.0" xml:id="jax-ws-faq" xml:lang="en"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:ns5="http://www.w3.org/2000/svg"
         xmlns:ns3="http://www.w3.org/1999/xhtml"
         xmlns:ns="http://docbook.org/ns/docbook"
         xmlns:m="http://www.w3.org/1998/Math/MathML">
    <title>FAQ</title>

    <section xml:id="section-jaxws-faq1">
        <title>Does &ws.spec.name; 2.0 support JAX-RPC 1.X?</title>
        <para>No. Although, &ws.spec.name;'s roots come from JAX-RPC, &ws.spec.name; is a 
                completely different component than JAX-RPC.</para>
    </section>

    <section xml:id="section-jaxws-faq2">
        <title>What is the difference between JAX-RPC and &ws.spec.name; ?</title>
        <para>One of the main difference between JAX-RPC and &ws.spec.name; is the 
            programming model. A &ws.spec.name; based service uses annotations (such @WebService) 
            to declare webservice endpoints. Use of these annotations obviates the need 
            for deployment descriptors. With &ws.spec.name;, you can have a webservice deployed 
            on a Java EE compliant application server without a single deployment descriptor. 
            Apart from these, other additional features (such asynchronous callbacks etc) 
            are also present.
        </para>
    </section>

    <section xml:id="section-jaxws-faq3">
        <title> Can a &ws.spec.name; and a JAX-RPC based service co-exist?</title>
        <para>Yes.</para>
    </section>

    <section xml:id="section-jaxws-faq4">
        <title> Is it downloadable from maven repository ?</title>
        <para>Yes from <link xlink:href="https://maven.java.net/content/repositories/releases/com/sun/xml/ws"/>.</para>
    </section>

    <section xml:id="section-jaxws-faq5">
        <title>How do I find out which version of the &ws.impl.name; I'm using?</title>
        <para>Run the following command
<programlisting language="cli">$ wsgen or wsimport -version</programlisting>
Alternatively, each &ws.spec.name; jar has version information in its META-INF/MANIFEST.MF.
        </para>        
    </section>
    
    <section xml:id="section-jaxws-faq6">
        <title>How can I change the Web Service address dynamically for a request ?</title>
        <para>
            <programlisting language="java">
((BindingProvider)proxy).getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, "..."); 
            </programlisting>
        </para>
    </section>
    <section xml:id="section-jaxws-faq8">
        <title>How do I do basic authentication in &ws.spec.name; ?</title>
        <para>
            You can do the following:
            <programlisting language="java">
HelloService service = new HelloService();
Hello proxy = (service.getHelloPort());
((BindingProvider)proxy).getRequestContext().put(BindingProvider.USERNAME_PROPERTY, "userfoo");
((BindingProvider)proxy).getRequestContext().put(BindingProvider.PASSWORD_PROPERTY, "passbar"); 
            </programlisting>
            USERNAME_PROPERTY, PASSWORD_PROPERTY are used primarily for service requests. 
            I think when you instantiate Service, it fetches WSDL and the server is returning 401. 
            You could try any one of the following solutions.
            <itemizedlist>
                <listitem>Use java.net.Authenticator class in your client application.</listitem>
                <listitem>Provide a local access to the WSDL using catalog. There is a catalog sample in the jax-ws distribution.</listitem>
                <listitem>Configure web.xml to allow GET requests without authentication</listitem>
            </itemizedlist>
        </para>
    </section>
    
    <section xml:id="section-jaxws-faq9">
        <title>Which standards are supported by &ws.impl.name;?</title>
        <para>
            <itemizedlist>
                <listitem>
                    <para>Web Services Addressing 1.0 - Core</para>
                </listitem>

                <listitem>
                    <para>Web Services Addressing 1.0 - SOAP
                    Binding</para>
                </listitem>

                <listitem>
                    <para>Web Services Addressing 1.0 - Metadata</para>
                </listitem>

                <listitem>
                    <para>Web Services Addressing 1.0 - WSDL Binding (RI
                    specific support)</para>
                </listitem>

                <listitem>
                    <para>WS-AddressingÂ  - Member Submission</para>
                </listitem>

                <listitem>
                    <para>SOAP 1.1 and 1.2</para>
                </listitem>

                <listitem>
                    <para>REST and XML/HTTP</para>
                </listitem>

                <listitem>
                    <para>WS-I Basic Profile 1.2 and 2.0</para>
                </listitem>

                <listitem>
                    <para>WS-I Simple SOAP Binding Profile 1.0</para>
                </listitem>

                <listitem>
                    <para>WS-I Attachment Profile 1.0</para>
                </listitem>

                <listitem>
                    <para>MTOM</para>
                </listitem>
            </itemizedlist>
        </para>
    </section>

</chapter>
