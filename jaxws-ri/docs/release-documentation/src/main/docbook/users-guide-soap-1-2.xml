<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2012, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Distribution License v. 1.0, which is available at
    http://www.eclipse.org/org/documents/edl-v10.php.

    SPDX-License-Identifier: BSD-3-Clause

-->

<!DOCTYPE book [
<!ENTITY % ents SYSTEM "docbook.ent">
%ents;
]>
<section version="5.0" xml:id="users-guide-soap-1-2" xml:lang="en"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:ns5="http://www.w3.org/2000/svg"
         xmlns:ns3="http://www.w3.org/1999/xhtml"
         xmlns:ns="http://docbook.org/ns/docbook"
         xmlns:m="http://www.w3.org/1998/Math/MathML">
    <title>SOAP 1.2</title>

    <section xml:id="section-94073181229507">
        <title>Introduction</title>

        <para>The default binding supported by &ws.impl.name; is SOAP 1.1 over
        HTTP. With this release we have added <emphasis role="bold">SOAP 1.2
        binding over HTTP</emphasis> support into &ws.impl.name;. This document
        describes how SOAP 1.2 binding can be applied to an endpoint and how
        it can be used on the client side in the case of proxy port. To enable
        SOAP 1.2 support in the <literal>Dispatch</literal> client please
        refer to the <literal>Dispatch</literal> documents.</para>
    </section>

    <section xml:id="section-627071591090577">
        <title>SOAP 1.2 Endpoint</title>

        <para>To enable SOAP 1.2 binding on an endpoint. You would need to set
        binding attribute value in sun-jaxws.xml
        to SOAP 1.2 HTTP binding value as specified by
        <literal>jakarta.xml.ws.soap.SOAPBinding.SOAP12HTTP_BINDING</literal>
        which is: "<link
        xlink:href="http://www.w3.org/2003/05/soap/bindings/HTTP/">http://www.w3.org/2003/05/soap/bindings/HTTP/</link>"
        or "<link
        xlink:href="http://java.sun.com/xml/ns/jaxws/2003/05/soap/bindings/HTTP/">http://java.sun.com/xml/ns/jaxws/2003/05/soap/bindings/HTTP/</link>"</para>

        <para>Here is the <filename>sun-jaxws.xml</filename> from
        <application>fromjava-soap1.2</application> sample:</para>

        <informalexample>
            <programlisting language="xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<endpoints xmlns="http://java.sun.com/xml/ns/jax-ws/ri/runtime"
        version="2.0">
    <endpoint name="fromjava-soap12"
            implementation="fromjava_soap12.server.AddNumbersImpl"
            binding="http://java.sun.com/xml/ns/jaxws/2003/05/soap/bindings/HTTP/
            url-pattern="/addnumbers"/>
</endpoints>]]></programlisting>
        </informalexample>

        <para>&ws.impl.name; generates WSDL on the fly when requested by a client.
        If this binding attribute is present and is equal to SOAP 1.2 HTTP
        binding WSDL with SOAP 1.2 binding is generated. Based on this binding
        descriptor &ws.impl.name; runtime configures itself to handle SOAP 1.2
        messages.</para>

        <para>Notice that the binding id "<link
        xlink:href="http://java.sun.com/xml/ns/jaxws/2003/05/soap/bindings/HTTP/">http://java.sun.com/xml/ns/jaxws/2003/05/soap/bindings/HTTP/</link>"
        is not a standard binding id. If you use SOAP 1.2 binding id "<link
        xlink:href="http://www.w3.org/2003/05/soap/bindings/HTTP/">http://www.w3.org/2003/05/soap/bindings/HTTP/</link>"
        defined by &ws.spec.name;, still the endpoint is configured to use SOAP 1.2
        binding, except that a wsdl will not be generated on the fly.</para>

        <para>Alternatively, you can specify the binding through
        <literal>@BindingType</literal> annotation in the implementation class
        to use SOAP 1.2 binding. Here is an example from the
        <application>fromjava_soap12</application> sample.</para>

        <informalexample>
            <programlisting language="java"><![CDATA[@WebService
@BindingType(value = "http://java.sun.com/xml/ns/jaxws/2003/05/soap/bindings/HTTP/")
public class AddNumbersImpl {

    /**
     * @param number1
     * @param number2
     * @return The sum
     * @throws AddNumbersException if any of the numbers to be added is
     *                             negative.
     */
    public int addNumbers(int number1, int number2) throws 
            AddNumbersException {
        if (number1 < 0 || number2 < 0) {
            throw new AddNumbersException("Negative number cant be added " +
                    "!", "Numbers: " + number1 + ", " + number2);
        }
        return number1 + number2;
    }

}]]></programlisting>
        </informalexample>

        <para>The commandline <xref linkend="tools-wsgen"
        xrefstyle="select:title" /> and the equivalent ant task can be used to
        generate SOAP 1.1 (default) or SOAP 1.2 WSDL. The binding information
        should be passed using <literal>-wsdl:protocol</literal>
        switch.</para>
    </section>

    <section xml:id="section-696486497021005">
        <title>Client</title>

        <para>On the client there is nothing special that has to be done.
        &ws.impl.name; runtime looks into the WSDL to determine the binding being used
        and configures itself accordingly. <xref linkend="tools-wsimport"
        xrefstyle="select:title" /> command line tool or
        <command>wsimport</command> ant task can be used to import the WSDL
        and to generated the client side artifacts.</para>
    </section>

    <section xml:id="section-7037754311590527">
        <title>Samples</title>

        <para>There are 2 samples bundled with this release</para>

        <itemizedlist>
            <listitem>
                <para><application>fromwsdl-soap12</application> - shows SOAP
                1.2 endpoint developed starting from wsdl</para>
            </listitem>

            <listitem>
                <para><application>fromjava-soap12</application> - shows SOAP
                1.2 endpoint developed starting from Java</para>
            </listitem>
        </itemizedlist>

        <para>A SOAP 1.2 message generated by &ws.impl.name;:</para>

        <informalexample>
            <programlisting><![CDATA[Content-Type: application/soap+xml; charset=utf-8
Content-Length: 178
SOAPAction: ""

<soapenv:Envelope xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope">
    <soapenv:Body>
        <addNumbers xmlns="http://duke.example.org">
            <arg0>-10</arg0>
            <arg1>20</arg1>
        </addNumbers>
    </soapenv:Body>
</soapenv:Envelope>]]></programlisting>
        </informalexample>

        <para>A SOAP 1.2 Fault message generated by &ws.impl.name;:</para>

        <informalexample>
            <programlisting><![CDATA[Content-Type:application/soap+xml; charset=utf-8
Content-Length: 476
SOAPAction: ""

<soapenv:Envelope xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope">
    <soapenv:Body>
        <soapenv:Fault>
            <soapenv:Code>
                <soapenv:Value>
                    soapenv:Sender
                </soapenv:Value>
            </soapenv:Code>
            <soapenv:Reason>
                <soapenv:Text xml:lang="en">
                    Negative number cant be added!
                </soapenv:Text>
            </soapenv:Reason>
            <soapenv:Detail>
                <AddNumbersFault xmlns="http://duke.example.org">
                    <faultInfo>Numbers: -10, 20</faultInfo>
                    <message>Negative number cant be added!</message>
                </AddNumbersFault>
            </soapenv:Detail>
        </soapenv:Fault>
    </soapenv:Body>
</soapenv:Envelope>]]></programlisting>
        </informalexample>
    </section>
</section>
